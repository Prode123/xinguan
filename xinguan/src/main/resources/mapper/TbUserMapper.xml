<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.humanresources.dao.TbUserDao">

    <resultMap type="com.example.humanresources.entity.TbUser" id="TbUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="phoneNumber" column="phone_number" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="modifiedTime" column="modified_time" jdbcType="TIMESTAMP"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="salt" column="salt" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="birth" column="birth" jdbcType="OTHER"/>
        <result property="departmentId" column="department_id" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap type="com.example.humanresources.entity.TbUserDepartment" id="TbUserMapWithDepartment">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="phoneNumber" column="phone_number" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="modifiedTime" column="modified_time" jdbcType="TIMESTAMP"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="salt" column="salt" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="birth" column="birth" jdbcType="OTHER"/>
        <result property="departmentId" column="department_id" jdbcType="INTEGER"/>
        <result property="departmentName" column="name" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="BaseResult">
        id, username, nickname, email, avatar, phone_number, status, create_time, modified_time, sex, salt, type, password, birth, department_id    </sql>

    <!--根据id查询-->
    <select id="selectById" resultType="com.example.humanresources.entity.TbUser">
        select
        <include refid="BaseResult"/>
        from tb_user
        where id = #{id}
    </select>

    <!--根据username查询-->
    <select id="getUserByUsername" resultType="com.example.humanresources.entity.TbUser">
        select
        <include refid="BaseResult"/>
        from tb_user
        where username = #{username}
    </select>

    <!--查询所有数据-->
    <select id="selectAll" resultMap="TbUserMap">
        select
        <include refid="BaseResult"/>
        from tb_user
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into tb_user(<include refid="BaseResult"/>)
        values (null,#{username}, #{nickname}, #{email}, #{avatar}, #{phoneNumber}, #{status}, #{createTime}, #{modifiedTime}, #{sex}, #{salt}, #{type},
        #{password}, #{birth}, #{departmentId})
    </insert>

    <!--通过主键id修改数据-->
    <update id="updateById">
        update tb_user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="nickname != null and nickname != ''">
                nickname = #{nickname},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="avatar != null and avatar != ''">
                avatar = #{avatar},
            </if>
            <if test="phoneNumber != null and phoneNumber != ''">
                phone_number = #{phoneNumber},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="modifiedTime != null">
                modified_time = #{modifiedTime},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="salt != null and salt != ''">
                salt = #{salt},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="birth != null">
                birth = #{birth},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键id删除-->
    <delete id="deleteById">
        delete
        from tb_user
        where id = #{id}
    </delete>

    <!--    通过用户名找到对应的角色的roleId-->
    <select id="getRoleIdByUsername" resultType="java.lang.Integer">
        select ur.role_id
        from tb_user_role ur,
             tb_user u
        where u.id = ur.user_id
          and u.username = #{username}
    </select>

    <!--    模糊查询user表-->
<!--    <select id="findUserList" resultType="com.example.humanresources.entity.TbUserDepartment">-->
    <select id="findUserList" resultMap="TbUserMapWithDepartment">
        select tb_user.*, tb_department.name
        from tb_user, tb_department
        <where>
            <if test="departmentId != null">
                and tb_user.department_id = #{departmentId}
            </if>
            <if test="username != null">
                and tb_user.username like concat('%','${username}','%')
            </if>
            <if test="email != null">
                and tb_user.email like concat('%','${email}','%')
            </if>
            <if test="sex != null">
                and tb_user.sex = #{sex}
            </if>
            <if test="nickname != null">
                and tb_user.nickname like concat('%','${nickname}','%')
            </if>
            <if test=" 1==1 ">
                and tb_department.id = tb_user.department_id
            </if>
        </where>
    </select>

    <!--    根据用户id获取角色对象-->
    <select id="findRoleListByUserId" resultType="com.example.humanresources.entity.TbRole">
        select r.*
        from tb_user_role ur,
             tb_role r
        where ur.role_id = r.id
          and ur.user_id = #{userId}
    </select>

</mapper>