<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.humanresources.dao.TbLoginLogDao">

    <resultMap type="com.example.humanresources.entity.TbLoginLog" id="TbLoginLogMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="loginTime" column="login_time" jdbcType="TIMESTAMP"/>
        <result property="location" column="location" jdbcType="VARCHAR"/>
        <result property="ip" column="ip" jdbcType="VARCHAR"/>
        <result property="userSystem" column="user_system" jdbcType="VARCHAR"/>
        <result property="userBrowser" column="user_browser" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="BaseResult">
        id, username, login_time, location, ip, user_system, user_browser    </sql>

    <!--根据id查询-->
    <select id="selectById" resultType="com.example.humanresources.entity.TbLoginLog">
        select
        <include refid="BaseResult"/>
        from tb_login_log
        where id = #{id}
    </select>

    <!--查询所有数据-->
    <select id="selectAll" resultMap="TbLoginLogMap">
        select
        <include refid="BaseResult"/>
        from tb_login_log
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into tb_login_log(<include refid="BaseResult"/>)
        values (null,#{username}, #{loginTime}, #{location}, #{ip}, #{userSystem}, #{userBrowser})
    </insert>

    <!--通过主键id修改数据-->
    <update id="updateById">
        update tb_login_log
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="loginTime != null">
                login_time = #{loginTime},
            </if>
            <if test="location != null and location != ''">
                location = #{location},
            </if>
            <if test="ip != null and ip != ''">
                ip = #{ip},
            </if>
            <if test="userSystem != null and userSystem != ''">
                user_system = #{userSystem},
            </if>
            <if test="userBrowser != null and userBrowser != ''">
                user_browser = #{userBrowser},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键id删除-->
    <delete id="deleteById">
        delete
        from tb_login_log
        where id = #{id}
    </delete>

    <!--    模糊查询搜有数据-->
    <select id="selectByTbLoginLog" resultMap="TbLoginLogMap">
        select
        <include refid="BaseResult"/>
        from tb_login_log
        <where>
            <if test="username != null">
                and username like concat('%',#{username},'%')
            </if>
            <if test="ip != null">
                and ip like concat('%',#{ip},'%')
            </if>
            <if test="location != null">
                and location like concat('%',#{location},'%')
            </if>
        </where>
        order by login_time desc
    </select>

    <!--    批量删除-->
    <delete id="deleteMoreTbLoginLog" parameterType="int[]">
        <!-- delete from emp where empno in(7789,7790) -->
        <!-- forEach : 用来循环 collection : 用来指定循环的数据的类型 可以填的值有：array,list,map item
            : 循环中为每个循环的数据指定一个别名 index : 循环中循环的下标 open : 开始 close : 结束 separator : 数组中元素之间的分隔符 -->
        delete from tb_login_log where id in
        <foreach collection="array" item="id" index="no" open="("
                 separator="," close=")">
            #{id}
        </foreach>
    </delete>


</mapper>